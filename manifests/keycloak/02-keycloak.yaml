---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kk-startup
  labels:
    app.kubernetes.io/name: kk
    app.kubernetes.io/instance: kk
    app.kubernetes.io/version: "26.2.0"
data:
  keycloak.cli: |
    embed-server --server-config=standalone-ha.xml --std-out=echo
    batch
    /subsystem=keycloak-server/:write-attribute(name=web-context,value=iam/auth)
    /subsystem=datasources/data-source=KeycloakDS/:write-attribute(name=validate-on-match,value=${env.DB_VALIDATE_ON_MATCH:true})
    /subsystem=datasources/data-source=KeycloakDS/:write-attribute(name=use-fast-fail,value=${env.DB_USE_CAST_FAIL:false})
    run-batch
    stop-embedded-server
---
apiVersion: v1
kind: Service
metadata:
  name: kk-headless
  labels:
    app.kubernetes.io/name: kk
    app.kubernetes.io/instance: kk
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/component: headless
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
  selector:
    app.kubernetes.io/name: kk
    app.kubernetes.io/instance: kk
---
apiVersion: v1
kind: Service
metadata:
  name: kk-http
  labels:
    app.kubernetes.io/name: kk
    app.kubernetes.io/instance: kk
    app.kubernetes.io/version: "26.2.0"
    app.kubernetes.io/component: http
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
    - name: https
      port: 8443
      targetPort: https
      protocol: TCP
    - name: http-management
      port: 9990
      targetPort: http-management
      protocol: TCP
  selector:
    app.kubernetes.io/name: kk
    app.kubernetes.io/instance: kk
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kk
  labels:
    app.kubernetes.io/name: kk
    app.kubernetes.io/instance: kk
    app.kubernetes.io/version: "26.2.0"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kk
      app.kubernetes.io/instance: kk
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  template:
    metadata:
      annotations:
        checksum/config-startup: 8b422677456a1f03322e6897e44c93c1b112fa9d3783ef11c7167091048931a3
        checksum/secrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
      labels:
        app.kubernetes.io/name: kk
        app.kubernetes.io/instance: kk
    spec:
      containers:
        - name: keycloak
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          image: "quay.io/keycloak/keycloak:26.2.0"
          imagePullPolicy: IfNotPresent
          command: 
            - "/bin/sh"
            - "-c"
          args:
            - |
              # Сборка сервера (без --profile)
              if [ ! -f /opt/keycloak/data/.built ]; then
                echo "Building Keycloak server..."
                /opt/keycloak/bin/kc.sh build
                touch /opt/keycloak/data/.built
                echo "Build completed."
              fi
              
              # Запуск сервера с профилем HA
              echo "Starting Keycloak server..."
              /opt/keycloak/bin/kc.sh start
              
          env:
            - name: JAVA_OPTS_APPEND
              value: "-Xms1024m -Xmx2048m -XX:MetaspaceSize=192M -XX:MaxMetaspaceSize=512m"
              
            - name: KC_PROFILE
              value: ha
              
            - name: KC_DB
              value: postgres
            - name: KC_DB_URL
              value: jdbc:postgresql://postgres-np.psql.svc:5432/keycloak
              
            - name: KC_DB_USER_FILE
              value: /secrets/creds/db-user
            - name: KC_DB_PASSWORD_FILE
              value: /secrets/creds/db-password

            - name: KC_ADMIN_FILE
              value: /secrets/creds/admin-user
            - name: KC_ADMIN_PASSWORD_FILE
              value: /secrets/creds/admin-password
              
            - name: KC_CACHE
              value: ha
            - name: KC_CACHE_OWNERS_COUNT
              value: "2"
            - name: JGROUPS_DISCOVERY_PROTOCOL
              value: dns.DNS_PING
            - name: JGROUPS_DISCOVERY_PROPERTIES
              value: 'dns_query=kk-headless.keycloak.svc.cluster.local'

            - name: KC_HOSTNAME
              value: keycloak.ilia.local
            - name: KC_HTTP_RELATIVE_PATH
              value: /iam/auth
            - name: KC_PROXY
              value: edge
              
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                  
            - name: CACHE_OWNERS_COUNT
              value: "2"
            - name: CACHE_OWNERS_AUTH_SESSIONS_COUNT
              value: "2"
            - name: PROXY_ADDRESS_FORWARDING
              value: "true"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: http-management
              containerPort: 9990
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /iam/auth/
              port: http
            initialDelaySeconds: 0
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
          startupProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 45
            timeoutSeconds: 5
            failureThreshold: 60
            periodSeconds: 5
          resources:
            limits:
              cpu: "1"
              memory: 3072Mi
            requests:
              cpu: 100m
              memory: 1024Mi
          volumeMounts:
            - name: startup
              mountPath: "/opt/jboss/startup-scripts/keycloak.cli"
              subPath: "keycloak.cli"
              readOnly: true
            - name: creds
              mountPath: /secrets/creds
              readOnly: true
      serviceAccountName: default
      securityContext:
        fsGroup: 1000
      enableServiceLinks: true
      restartPolicy: Always
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app.kubernetes.io/name"
                    operator: In
                    values:
                      - kk
              topologyKey: "kubernetes.io/hostname"
      priorityClassName: high-priority
      terminationGracePeriodSeconds: 60
      volumes:
        - name: startup
          configMap:
            name: kk-startup
            defaultMode: 0555
            items:
              - key: keycloak.cli
                path: keycloak.cli
        - name: creds
          secret:
            secretName: keycloak-credentials
